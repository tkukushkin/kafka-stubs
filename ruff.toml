line-length = 120
src = ["src", "."]
target-version = "py310"

[lint]
select = [
    "F", # Pyflakes
    "E", # Pycodestyle Error
    "W", # PycodeStyle Warning
    "I", # Isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT", # flake8-pytest-style
    "PYI", # flake8-pyi
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID",  # flake8-tidy-imports
    "PTH", # flake8-use-pathlib
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "RUF",  # Ruff-specific rules
]
ignore = [
    "PLR2004", # magic-value-comparison
    "TRY002", # raise-vanilla-class
    "TRY003", # raise-vanilla-args
    "PLR0913", # too-many-arguments
    "N818", # error-suffix-on-exception-name
]
extend-safe-fixes = [
    "PT", # flake8-pytest-style
    "TID252",
]

[lint.per-file-ignores]
"tests*/**/*.py" = [
    "N", # pep8-naming
]

[lint.flake8-quotes]
inline-quotes = "single"

[lint.isort]
combine-as-imports = true
no-lines-before = ["local-folder"]

[lint.flake8-tidy-imports.banned-api]
"asyncio".msg = "Use anyio instead."
"trio".msg = "Use anyio instead."

[format]
quote-style = "single"
