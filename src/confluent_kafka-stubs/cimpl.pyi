from collections.abc import Callable
from typing import Any, Final, Literal, overload

from confluent_kafka._config import ConsumerConfig, ProducerConfig
from confluent_kafka.admin import ClusterMetadata

ACL_OPERATION_ALL: Final[int] = 2
ACL_OPERATION_ALTER: Final[int] = 7
ACL_OPERATION_ALTER_CONFIGS: Final[int] = 11
ACL_OPERATION_ANY: Final[int] = 1
ACL_OPERATION_CLUSTER_ACTION: Final[int] = 9
ACL_OPERATION_CREATE: Final[int] = 5
ACL_OPERATION_DELETE: Final[int] = 6
ACL_OPERATION_DESCRIBE: Final[int] = 8
ACL_OPERATION_DESCRIBE_CONFIGS: Final[int] = 10
ACL_OPERATION_IDEMPOTENT_WRITE: Final[int] = 12
ACL_OPERATION_READ: Final[int] = 3
ACL_OPERATION_UNKNOWN: Final[int] = 0
ACL_OPERATION_WRITE: Final[int] = 4
ACL_PERMISSION_TYPE_ALLOW: Final[int] = 3
ACL_PERMISSION_TYPE_ANY: Final[int] = 1
ACL_PERMISSION_TYPE_DENY: Final[int] = 2
ACL_PERMISSION_TYPE_UNKNOWN: Final[int] = 0
ALTER_CONFIG_OP_TYPE_APPEND: Final[int] = 2
ALTER_CONFIG_OP_TYPE_DELETE: Final[int] = 1
ALTER_CONFIG_OP_TYPE_SET: Final[int] = 0
ALTER_CONFIG_OP_TYPE_SUBTRACT: Final[int] = 3
CONFIG_SOURCE_DEFAULT_CONFIG: Final[int] = 5
CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG: Final[int] = 2
CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG: Final[int] = 3
CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG: Final[int] = 1
CONFIG_SOURCE_GROUP_CONFIG: Final[int] = 8
CONFIG_SOURCE_STATIC_BROKER_CONFIG: Final[int] = 4
CONFIG_SOURCE_UNKNOWN_CONFIG: Final[int] = 0
CONSUMER_GROUP_STATE_COMPLETING_REBALANCE: Final[int] = 2
CONSUMER_GROUP_STATE_DEAD: Final[int] = 4
CONSUMER_GROUP_STATE_EMPTY: Final[int] = 5
CONSUMER_GROUP_STATE_PREPARING_REBALANCE: Final[int] = 1
CONSUMER_GROUP_STATE_STABLE: Final[int] = 3
CONSUMER_GROUP_STATE_UNKNOWN: Final[int] = 0
CONSUMER_GROUP_TYPE_CLASSIC: Final[int] = 2
CONSUMER_GROUP_TYPE_CONSUMER: Final[int] = 1
CONSUMER_GROUP_TYPE_UNKNOWN: Final[int] = 0
ELECTION_TYPE_PREFERRED: Final[int] = 0
ELECTION_TYPE_UNCLEAN: Final[int] = 1
ISOLATION_LEVEL_READ_COMMITTED: Final[int] = 1
ISOLATION_LEVEL_READ_UNCOMMITTED: Final[int] = 0
OFFSET_BEGINNING: Final[int] = -2
OFFSET_END: Final[int] = -1
OFFSET_INVALID: Final[int] = -1001
OFFSET_SPEC_EARLIEST: Final[int] = -2
OFFSET_SPEC_LATEST: Final[int] = -1
OFFSET_SPEC_MAX_TIMESTAMP: Final[int] = -3
OFFSET_STORED: Final[int] = -1000
RESOURCE_ANY: Final[int] = 1
RESOURCE_BROKER: Final[int] = 4
RESOURCE_GROUP: Final[int] = 3
RESOURCE_PATTERN_ANY: Final[int] = 1
RESOURCE_PATTERN_LITERAL: Final[int] = 3
RESOURCE_PATTERN_MATCH: Final[int] = 2
RESOURCE_PATTERN_PREFIXED: Final[int] = 4
RESOURCE_PATTERN_UNKNOWN: Final[int] = 0
RESOURCE_TOPIC: Final[int] = 2
RESOURCE_TRANSACTIONAL_ID: Final[int] = 5
RESOURCE_UNKNOWN: Final[int] = 0
SCRAM_MECHANISM_SHA_256: Final[int] = 1
SCRAM_MECHANISM_SHA_512: Final[int] = 2
SCRAM_MECHANISM_UNKNOWN: Final[int] = 0
TIMESTAMP_CREATE_TIME: Final[int] = 1
TIMESTAMP_LOG_APPEND_TIME: Final[int] = 2
TIMESTAMP_NOT_AVAILABLE: Final[int] = 0

def libversion() -> tuple[str, int]: ...
def version() -> tuple[str, int]: ...

class Consumer:
    def __init__(self, config: ConsumerConfig) -> None: ...
    def assign(self, partitions: list[TopicPartition]) -> None: ...
    def assignment(self) -> list[TopicPartition]: ...
    def close(self) -> None: ...
    @overload
    def commit(self, *, asynchronous: Literal[True] = True) -> None: ...
    @overload
    def commit(self, *, asynchronous: Literal[False]) -> list[TopicPartition]: ...
    @overload
    def commit(self, *, asynchronous: bool) -> list[TopicPartition] | None: ...
    @overload
    def commit(self, message: Message, *, asynchronous: Literal[True] = True) -> None: ...
    @overload
    def commit(self, message: Message, *, asynchronous: Literal[False]) -> list[TopicPartition]: ...
    @overload
    def commit(self, message: Message, *, asynchronous: bool) -> list[TopicPartition] | None: ...
    @overload
    def commit(self, *, offsets: list[TopicPartition], asynchronous: Literal[True] = True) -> None: ...
    @overload
    def commit(self, *, offsets: list[TopicPartition], asynchronous: Literal[False]) -> list[TopicPartition]: ...
    @overload
    def commit(self, *, offsets: list[TopicPartition], asynchronous: bool) -> list[TopicPartition] | None: ...
    def committed(self, partitions: list[TopicPartition], timeout: float = ...) -> list[TopicPartition]: ...
    def consume(self, num_messages: int = 1, timeout: float = ...) -> list[Message]: ...
    def consumer_group_metadata(self) -> object: ...
    def get_watermark_offsets(
        self, partition: TopicPartition, timeout: float = ..., cached: bool = False
    ) -> tuple[int, int]: ...
    def incremental_assign(self, partitions: list[TopicPartition]) -> None: ...
    def incremental_unassign(self, partitions: list[TopicPartition]) -> None: ...
    def list_topics(self, topic: str | None = None, timeout: float = -1) -> ClusterMetadata: ...
    def memberid(self) -> str | None: ...
    def offsets_for_times(self, partitions: list[TopicPartition], timeout: float = ...) -> list[TopicPartition]: ...
    def pause(self, partitions: list[TopicPartition]) -> None: ...
    def poll(self, timeout: float = -1) -> Message | None: ...
    def position(self, partitions: list[TopicPartition]) -> list[TopicPartition]: ...
    def resume(self, partitions: list[TopicPartition]) -> None: ...
    def seek(self, partition: TopicPartition) -> None: ...
    def set_sasl_credentials(self, username: str, password: str) -> None: ...
    @overload
    def store_offsets(self, message: Message) -> None: ...
    @overload
    def store_offsets(self, offsets: list[TopicPartition]) -> None: ...
    def subscribe(
        self,
        topics: list[str],
        on_assign: Callable[[Consumer, list[TopicPartition]], object] | None = None,
        on_revoke: Callable[[Consumer, list[TopicPartition]], object] | None = None,
        on_lost: Callable[[Consumer, list[TopicPartition]], object] | None = None,
    ) -> None: ...
    def unassign(self) -> None: ...
    def unsubscribe(self) -> None: ...

class KafkaError:
    BROKER_NOT_AVAILABLE: Final[int] = ...
    CLUSTER_AUTHORIZATION_FAILED: Final[int] = ...
    CONCURRENT_TRANSACTIONS: Final[int] = ...
    COORDINATOR_LOAD_IN_PROGRESS: Final[int] = ...
    COORDINATOR_NOT_AVAILABLE: Final[int] = ...
    DELEGATION_TOKEN_AUTHORIZATION_FAILED: Final[int] = ...
    DELEGATION_TOKEN_AUTH_DISABLED: Final[int] = ...
    DELEGATION_TOKEN_EXPIRED: Final[int] = ...
    DELEGATION_TOKEN_NOT_FOUND: Final[int] = ...
    DELEGATION_TOKEN_OWNER_MISMATCH: Final[int] = ...
    DELEGATION_TOKEN_REQUEST_NOT_ALLOWED: Final[int] = ...
    DUPLICATE_RESOURCE: Final[int] = ...
    DUPLICATE_SEQUENCE_NUMBER: Final[int] = ...
    ELECTION_NOT_NEEDED: Final[int] = ...
    ELIGIBLE_LEADERS_NOT_AVAILABLE: Final[int] = ...
    FEATURE_UPDATE_FAILED: Final[int] = ...
    FENCED_INSTANCE_ID: Final[int] = ...
    FENCED_LEADER_EPOCH: Final[int] = ...
    FENCED_MEMBER_EPOCH: Final[int] = ...
    FETCH_SESSION_ID_NOT_FOUND: Final[int] = ...
    GROUP_AUTHORIZATION_FAILED: Final[int] = ...
    GROUP_ID_NOT_FOUND: Final[int] = ...
    GROUP_MAX_SIZE_REACHED: Final[int] = ...
    GROUP_SUBSCRIBED_TO_TOPIC: Final[int] = ...
    ILLEGAL_GENERATION: Final[int] = ...
    ILLEGAL_SASL_STATE: Final[int] = ...
    INCONSISTENT_GROUP_PROTOCOL: Final[int] = ...
    INCONSISTENT_VOTER_SET: Final[int] = ...
    INVALID_COMMIT_OFFSET_SIZE: Final[int] = ...
    INVALID_CONFIG: Final[int] = ...
    INVALID_FETCH_SESSION_EPOCH: Final[int] = ...
    INVALID_GROUP_ID: Final[int] = ...
    INVALID_MSG: Final[int] = ...
    INVALID_MSG_SIZE: Final[int] = ...
    INVALID_PARTITIONS: Final[int] = ...
    INVALID_PRINCIPAL_TYPE: Final[int] = ...
    INVALID_PRODUCER_EPOCH: Final[int] = ...
    INVALID_PRODUCER_ID_MAPPING: Final[int] = ...
    INVALID_RECORD: Final[int] = ...
    INVALID_REPLICATION_FACTOR: Final[int] = ...
    INVALID_REPLICA_ASSIGNMENT: Final[int] = ...
    INVALID_REQUEST: Final[int] = ...
    INVALID_REQUIRED_ACKS: Final[int] = ...
    INVALID_SESSION_TIMEOUT: Final[int] = ...
    INVALID_TIMESTAMP: Final[int] = ...
    INVALID_TRANSACTION_TIMEOUT: Final[int] = ...
    INVALID_TXN_STATE: Final[int] = ...
    INVALID_UPDATE_VERSION: Final[int] = ...
    KAFKA_STORAGE_ERROR: Final[int] = ...
    LEADER_NOT_AVAILABLE: Final[int] = ...
    LISTENER_NOT_FOUND: Final[int] = ...
    LOG_DIR_NOT_FOUND: Final[int] = ...
    MEMBER_ID_REQUIRED: Final[int] = ...
    MSG_SIZE_TOO_LARGE: Final[int] = ...
    NETWORK_EXCEPTION: Final[int] = ...
    NON_EMPTY_GROUP: Final[int] = ...
    NOT_CONTROLLER: Final[int] = ...
    NOT_COORDINATOR: Final[int] = ...
    NOT_ENOUGH_REPLICAS: Final[int] = ...
    NOT_ENOUGH_REPLICAS_AFTER_APPEND: Final[int] = ...
    NOT_LEADER_FOR_PARTITION: Final[int] = ...
    NO_ERROR: Final[int] = ...
    NO_REASSIGNMENT_IN_PROGRESS: Final[int] = ...
    OFFSET_METADATA_TOO_LARGE: Final[int] = ...
    OFFSET_NOT_AVAILABLE: Final[int] = ...
    OFFSET_OUT_OF_RANGE: Final[int] = ...
    OPERATION_NOT_ATTEMPTED: Final[int] = ...
    OUT_OF_ORDER_SEQUENCE_NUMBER: Final[int] = ...
    POLICY_VIOLATION: Final[int] = ...
    PREFERRED_LEADER_NOT_AVAILABLE: Final[int] = ...
    PRINCIPAL_DESERIALIZATION_FAILURE: Final[int] = ...
    PRODUCER_FENCED: Final[int] = ...
    REASSIGNMENT_IN_PROGRESS: Final[int] = ...
    REBALANCE_IN_PROGRESS: Final[int] = ...
    REBOOTSTRAP_REQUIRED: Final[int] = ...
    RECORD_LIST_TOO_LARGE: Final[int] = ...
    REPLICA_NOT_AVAILABLE: Final[int] = ...
    REQUEST_TIMED_OUT: Final[int] = ...
    RESOURCE_NOT_FOUND: Final[int] = ...
    SASL_AUTHENTICATION_FAILED: Final[int] = ...
    SECURITY_DISABLED: Final[int] = ...
    STALE_BROKER_EPOCH: Final[int] = ...
    STALE_CTRL_EPOCH: Final[int] = ...
    STALE_MEMBER_EPOCH: Final[int] = ...
    TELEMETRY_TOO_LARGE: Final[int] = ...
    THROTTLING_QUOTA_EXCEEDED: Final[int] = ...
    TOPIC_ALREADY_EXISTS: Final[int] = ...
    TOPIC_AUTHORIZATION_FAILED: Final[int] = ...
    TOPIC_DELETION_DISABLED: Final[int] = ...
    TOPIC_EXCEPTION: Final[int] = ...
    TRANSACTIONAL_ID_AUTHORIZATION_FAILED: Final[int] = ...
    TRANSACTION_COORDINATOR_FENCED: Final[int] = ...
    UNACCEPTABLE_CREDENTIAL: Final[int] = ...
    UNKNOWN: Final[int] = ...
    UNKNOWN_LEADER_EPOCH: Final[int] = ...
    UNKNOWN_MEMBER_ID: Final[int] = ...
    UNKNOWN_PRODUCER_ID: Final[int] = ...
    UNKNOWN_SUBSCRIPTION_ID: Final[int] = ...
    UNKNOWN_TOPIC_ID: Final[int] = ...
    UNKNOWN_TOPIC_OR_PART: Final[int] = ...
    UNRELEASED_INSTANCE_ID: Final[int] = ...
    UNSTABLE_OFFSET_COMMIT: Final[int] = ...
    UNSUPPORTED_ASSIGNOR: Final[int] = ...
    UNSUPPORTED_COMPRESSION_TYPE: Final[int] = ...
    UNSUPPORTED_FOR_MESSAGE_FORMAT: Final[int] = ...
    UNSUPPORTED_SASL_MECHANISM: Final[int] = ...
    UNSUPPORTED_VERSION: Final[int] = ...
    _ALL_BROKERS_DOWN: Final[int] = ...
    _APPLICATION: Final[int] = ...
    _ASSIGNMENT_LOST: Final[int] = ...
    _ASSIGN_PARTITIONS: Final[int] = ...
    _AUTHENTICATION: Final[int] = ...
    _AUTO_OFFSET_RESET: Final[int] = ...
    _BAD_COMPRESSION: Final[int] = ...
    _BAD_MSG: Final[int] = ...
    _CONFLICT: Final[int] = ...
    _CRIT_SYS_RESOURCE: Final[int] = ...
    _DESTROY: Final[int] = ...
    _DESTROY_BROKER: Final[int] = ...
    _EXISTING_SUBSCRIPTION: Final[int] = ...
    _FAIL: Final[int] = ...
    _FATAL: Final[int] = ...
    _FENCED: Final[int] = ...
    _FS: Final[int] = ...
    _GAPLESS_GUARANTEE: Final[int] = ...
    _INCONSISTENT: Final[int] = ...
    _INTR: Final[int] = ...
    _INVALID_ARG: Final[int] = ...
    _INVALID_DIFFERENT_RECORD: Final[int] = ...
    _INVALID_TYPE: Final[int] = ...
    _IN_PROGRESS: Final[int] = ...
    _ISR_INSUFF: Final[int] = ...
    _KEY_DESERIALIZATION: Final[int] = ...
    _KEY_SERIALIZATION: Final[int] = ...
    _LOG_TRUNCATION: Final[int] = ...
    _MAX_POLL_EXCEEDED: Final[int] = ...
    _MSG_TIMED_OUT: Final[int] = ...
    _NODE_UPDATE: Final[int] = ...
    _NOENT: Final[int] = ...
    _NOOP: Final[int] = ...
    _NOT_CONFIGURED: Final[int] = ...
    _NOT_IMPLEMENTED: Final[int] = ...
    _NO_OFFSET: Final[int] = ...
    _OUTDATED: Final[int] = ...
    _PARTIAL: Final[int] = ...
    _PARTITION_EOF: Final[int] = ...
    _PREV_IN_PROGRESS: Final[int] = ...
    _PURGE_INFLIGHT: Final[int] = ...
    _PURGE_QUEUE: Final[int] = ...
    _QUEUE_FULL: Final[int] = ...
    _READ_ONLY: Final[int] = ...
    _RESOLVE: Final[int] = ...
    _RETRY: Final[int] = ...
    _REVOKE_PARTITIONS: Final[int] = ...
    _SSL: Final[int] = ...
    _STATE: Final[int] = ...
    _TIMED_OUT: Final[int] = ...
    _TIMED_OUT_QUEUE: Final[int] = ...
    _TRANSPORT: Final[int] = ...
    _UNDERFLOW: Final[int] = ...
    _UNKNOWN_BROKER: Final[int] = ...
    _UNKNOWN_GROUP: Final[int] = ...
    _UNKNOWN_PARTITION: Final[int] = ...
    _UNKNOWN_PROTOCOL: Final[int] = ...
    _UNKNOWN_TOPIC: Final[int] = ...
    _UNSUPPORTED_FEATURE: Final[int] = ...
    _VALUE_DESERIALIZATION: Final[int] = ...
    _VALUE_SERIALIZATION: Final[int] = ...
    _WAIT_CACHE: Final[int] = ...
    _WAIT_COORD: Final[int] = ...

    def __init__(
        self,
        error: int,
        reason: str | None = None,
        fatal: bool = False,
        retriable: bool = False,
        txn_requires_abort: bool = False,
    ) -> None: ...
    def code(self) -> int: ...
    def fatal(self) -> bool: ...
    def name(self) -> str: ...
    def retriable(self) -> bool: ...
    def str(self) -> str: ...
    def txn_requires_abort(self) -> bool: ...

class KafkaException(Exception): ...

class Message:
    def error(self) -> KafkaError | None: ...
    def headers(self) -> list[tuple[str, bytes]] | None: ...
    def key(self) -> str | bytes | None: ...
    def latency(self) -> float | None: ...
    def leader_epoch(self) -> int | None: ...
    def offset(self) -> int | None: ...
    def partition(self) -> int: ...
    def set_headers(self, headers: list[tuple[str, bytes]] | None) -> None: ...
    def set_key(self, key: str | bytes | None) -> None: ...
    def set_value(self, value: str | bytes | None) -> None: ...
    def timestamp(self) -> tuple[int, int]: ...
    def topic(self) -> str | None: ...
    def value(self) -> str | bytes | None: ...

class NewPartitions:
    topic: str
    new_total_count: int
    replica_assignment: list[list[Any]] | None  # FIXME: Use correct type

    def __init__(
        self,
        topic: str,
        new_total_count: int,
        replica_assignment: list[list[Any]] | None = None,  # FIXME: Use correct type
    ) -> None: ...

class NewTopic:
    topic: str
    num_partitions: int
    replication_factor: int | None
    replica_assignment: list[list[int]] | None
    config: dict[str, str] | None

    def __init__(
        self,
        topic: str,
        num_partitions: int = -1,
        replication_factor: int = -1,
        replica_assignment: list[list[int]] | None = None,
        config: dict[str, str] | None = None,
    ) -> None: ...

class Producer:
    def __init__(self, config: ProducerConfig) -> None: ...
    def __len__(self) -> int: ...
    def __bool__(self) -> bool: ...
    def abort_transaction(self, timeout: float = ...) -> None: ...
    def begin_transaction(self) -> None: ...
    def commit_transaction(self, timeout: float = ...) -> None: ...
    def flush(self, timeout: float = ...) -> int: ...
    def init_transactions(self, timeout: float = ...) -> None: ...
    def list_topics(self, topic: str | None = None, timeout: float = -1) -> ClusterMetadata: ...
    def poll(self, timeout: float = ...) -> int: ...
    def produce(
        self,
        topic: str,
        value: str | bytes | None = None,
        key: str | bytes | None = None,
        partition: int = ...,
        on_delivery: Callable[[KafkaError | None, Message], object] | None = None,
        timestamp: int = ...,
        headers: list[tuple[str, str | bytes | None]] | dict[str, str | bytes | None] | None = None,
    ) -> None: ...
    def purge(self, in_queue: bool = True, in_flight: bool = True, blocking: bool = True) -> None: ...
    def send_offsets_to_transaction(
        self, positions: list[TopicPartition], group_metadata: object, timeout: float = ...
    ) -> None: ...
    def set_sasl_credentials(self, username: str, password: str) -> None: ...

class TopicPartition:
    topic: str
    partition: int
    offset: int
    metadata: str | None
    leader_epoch: int | None
    error: KafkaError | None

    def __init__(
        self,
        topic: str,
        partition: int = -1,
        offset: int = ...,
        metadata: str | None = None,
        leader_epoch: int | None = None,
    ) -> None: ...

class Uuid:
    def __init__(self, most_significant_bits: int, least_significant_bits: int) -> None: ...
    def get_most_significant_bits(self) -> int: ...
    def get_least_significant_bits(self) -> int: ...
