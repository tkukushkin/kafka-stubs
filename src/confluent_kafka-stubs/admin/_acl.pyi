from enum import Enum

from confluent_kafka.admin._resource import ResourcePatternType, ResourceType

class AclOperation(Enum):
    UNKNOWN = ...
    ANY = ...
    ALL = ...
    READ = ...
    WRITE = ...
    CREATE = ...
    DELETE = ...
    ALTER = ...
    DESCRIBE = ...
    CLUSTER_ACTION = ...
    DESCRIBE_CONFIGS = ...
    ALTER_CONFIGS = ...
    IDEMPOTENT_WRITE = ...

class AclPermissionType(Enum):
    UNKNOWN = ...
    ANY = ...
    DENY = ...
    ALLOW = ...

class AclBinding:
    restype: ResourceType
    restype_int: int
    name: str
    resource_pattern_type: ResourcePatternType
    resource_pattern_type_int: int
    principal: str
    host: str
    operation: AclOperation
    operation_int: int
    permission_type: AclPermissionType
    permission_type_int: int

    def __init__(
        self,
        restype: ResourceType | int | str,
        name: str,
        resource_pattern_type: ResourcePatternType | int | str,
        principal: str,
        host: str,
        operation: AclOperation | int | str,
        permission_type: AclPermissionType | int | str,
    ) -> None: ...

class AclBindingFilter(AclBinding): ...
